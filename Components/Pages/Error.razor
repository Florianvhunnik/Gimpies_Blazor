@page "/Error/{statusCode:int}"
@inject NavigationManager NavManager

<PageTitle>Error</PageTitle>

<div class="error-container">
    <div class="error-code">
        <h1>@statusCode</h1>
    </div>
    <div class="error-message">
        <p>@errorMessage</p>
    </div>
    <a class="btn btn-primary" role="button" href="/login">Gimpies Login</a>
</div>

@code {
    [Parameter]
    public int statusCode { get; set; }
    private string errorMessage = "";

    private readonly Dictionary<int, string> errorMessages = new()
    {
        { 400, "Er is een fout opgetreden bij het verwerken van je verzoek!" },
        { 401, "Je bent niet geautoriseerd om deze pagina te bekijken!" },
        { 403, "Je hebt geen toegang tot deze pagina!" },
        { 404, "De pagina die je zoekt bestaat niet of is verplaatst!" },
        { 405, "De gebruikte HTTP-methode is niet toegestaan!" },
        { 408, "Het verzoek duurde te lang om te verwerken!" },
        { 429, "Te veel verzoeken! Probeer het later opnieuw." },
        { 500, "Er is een serverfout opgetreden!" },
        { 502, "Er trad een fout op in de gateway!" },
        { 503, "De service is tijdelijk niet beschikbaar. Probeer het later opnieuw." },
        { 504, "De server heeft te lang gewacht op een antwoord!" }
    };

    protected override void OnInitialized()
    {
        errorMessage = errorMessages.ContainsKey(statusCode) ? errorMessages[statusCode] : "Er is een onbekende fout opgetreden!";
    }
}
