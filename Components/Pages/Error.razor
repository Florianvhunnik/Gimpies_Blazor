@page "/Error/{statusCode:int}"
@inject NavigationManager NavManager
@attribute [StreamRendering]

<PageTitle>Error</PageTitle>

<style>
    body {
        background-color: #121212; 
        color: #ffffff;
    }

    .login-card {
        width: 500px;
        height: 250px;
        margin: auto;
        margin-top: 200px;
        padding: 50px;
        background-color: #1f1f1f;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    .btn-custom {
        background-color: #007bff;
        color: white; 
        border: none;
        border-radius: 5px;
        width: 100%;
    }

    .btn-custom:hover {
        background-text-center: #0056b3;
    }

    .register {
        text-align: center;
        margin-top: 10px;
    }

    .form {
        margin-top: 30px;
    }

    .btn:hover {
        background-color: #0056b3;
    }
</style>

<div class="container mt-5">
    <div class="login-card">
        <h1 class="text-center">@statusCode</h1>
        <p class="text-center">@errorMessage</p>
        <a class="btn btn-custom" role="button" href="/login">Gimpies Login</a>
    </div>
</div>

@code {
    [Parameter]
    public int statusCode { get; set; }
    private string errorMessage = "";

    private readonly Dictionary<int, string> errorMessages = new()
    {
        { 400, "Er is een fout opgetreden bij het verwerken van je verzoek!" },
        { 401, "Je bent niet geautoriseerd om deze pagina te bekijken!" },
        { 403, "Je hebt geen toegang tot deze pagina!" },
        { 404, "De pagina die je zoekt bestaat niet of is verplaatst!" },
        { 405, "De gebruikte HTTP-methode is niet toegestaan!" },
        { 408, "Het verzoek duurde te lang om te verwerken!" },
        { 429, "Te veel verzoeken! Probeer het later opnieuw." },
        { 500, "Er is een serverfout opgetreden!" },
        { 502, "Er trad een fout op in de gateway!" },
        { 503, "De service is tijdelijk niet beschikbaar. Probeer het later opnieuw." },
        { 504, "De server heeft te lang gewacht op een antwoord!" }
    };

    protected override void OnInitialized()
    {
        errorMessage = errorMessages.ContainsKey(statusCode) ? errorMessages[statusCode] : "Er is een onbekende fout opgetreden!";
    }
}
